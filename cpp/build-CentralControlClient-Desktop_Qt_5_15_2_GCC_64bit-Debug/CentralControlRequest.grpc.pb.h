// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: CentralControlRequest.proto
#ifndef GRPC_CentralControlRequest_2eproto__INCLUDED
#define GRPC_CentralControlRequest_2eproto__INCLUDED

#include "CentralControlRequest.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace CentralControlRequest {

// / <summary>
// / 发送到服务端
// / </summary>
class CentralControlRequest final {
 public:
  static constexpr char const* service_full_name() {
    return "CentralControlRequest.CentralControlRequest";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / <summary>
    // / 1. 发送数据-N640图片显示
    // / </summary>
    virtual ::grpc::Status SendN640PicShow(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendN640PicShow(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendN640PicShowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendN640PicShow(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendN640PicShowRaw(context, request, cq));
    }
    // / <summary>
    // / 2. 发送数据-N640截图操作
    // / </summary>
    virtual ::grpc::Status SendN640ScreenShot(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendN640ScreenShot(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendN640ScreenShotRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendN640ScreenShot(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendN640ScreenShotRaw(context, request, cq));
    }
    // / <summary>
    // / 3. 信号源切换
    // / </summary>
    // / <param name="cmdInput">输入源</param>
    // / <param name="cmdOutput">输出源</param>
    virtual ::grpc::Status SendSignalSwitch(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendSignalSwitch(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendSignalSwitchRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendSignalSwitch(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendSignalSwitchRaw(context, request, cq));
    }
    // / <summary>
    // / 4. 获取分辨率
    // / </summary>
    // / <param name="src">信号源选择 01-HDMI1 02-HDMI1 03-HDMI1 04-HDMI1 </param>
    virtual ::grpc::Status SendResolution(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendResolution(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendResolutionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendResolution(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendResolutionRaw(context, request, cq));
    }
    // / <summary>
    // / 5. HDMI口是否存在信号查询
    // / </summary>
    // / <param name="src">信号源选择 01-HDMI1 02-HDMI1 03-HDMI1 04-HDMI1 </param>
    virtual ::grpc::Status SendCheckSignal(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendCheckSignal(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendCheckSignalRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendCheckSignal(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendCheckSignalRaw(context, request, cq));
    }
    // / <summary>
    // / 6. 发送心跳包
    // / </summary>
    virtual ::grpc::Status SendHeartBeatData(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendHeartBeatData(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendHeartBeatDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendHeartBeatData(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendHeartBeatDataRaw(context, request, cq));
    }
    // / <summary>
    // / 7. 发送屏幕（背光）亮灭控制
    // / </summary>
    // / <param name="isBright">是否亮屏 true-亮 false-灭</param>
    virtual ::grpc::Status SendScreenBrightOut(::grpc::ClientContext* context, const ::CentralControlRequest::Request2& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendScreenBrightOut(::grpc::ClientContext* context, const ::CentralControlRequest::Request2& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendScreenBrightOutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendScreenBrightOut(::grpc::ClientContext* context, const ::CentralControlRequest::Request2& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendScreenBrightOutRaw(context, request, cq));
    }
    // / <summary>
    // / 8. 发送WIFI启用、禁用控制
    // / </summary>
    // / <param name="isEnable">是否启用 0x01-启用 0x02-关闭</param>
    virtual ::grpc::Status SendWIFICtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request2& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendWIFICtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request2& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendWIFICtrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendWIFICtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request2& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendWIFICtrlRaw(context, request, cq));
    }
    // / <summary>
    // / 9. 回复-通知应用关闭电脑控制
    // / </summary>
    // / <param name="shutDownType">关机类型：假关机、断电关机</param>
    // / <param name="isSuccessed">是否成功 0x01-成功 0x02-失败</param>
    virtual ::grpc::Status RespNoticeAppShutdown(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncRespNoticeAppShutdown(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncRespNoticeAppShutdownRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncRespNoticeAppShutdown(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncRespNoticeAppShutdownRaw(context, request, cq));
    }
    // / <summary>
    // / 10. 发送功放板音量调节
    // / </summary>
    // / <param name="volumeValue">音量值（0-100）</param>
    virtual ::grpc::Status SendPowerAmplifierVolumeCtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendPowerAmplifierVolumeCtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendPowerAmplifierVolumeCtrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendPowerAmplifierVolumeCtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendPowerAmplifierVolumeCtrlRaw(context, request, cq));
    }
    // / <summary>
    // / 11. 发送功放板模式调节
    // / </summary>
    // / <param name="mode">音效模式</param>
    virtual ::grpc::Status SendPowerAmplifierModeCtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendPowerAmplifierModeCtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendPowerAmplifierModeCtrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendPowerAmplifierModeCtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendPowerAmplifierModeCtrlRaw(context, request, cq));
    }
    // / <summary>
    // / 12. 回复提笔和放笔的上报
    // / </summary>
    // / <param name="cmdParam"></param>
    // / <param name="isSuccessed"></param>
    virtual ::grpc::Status RespTakePutPenReport(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncRespTakePutPenReport(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncRespTakePutPenReportRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncRespTakePutPenReport(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncRespTakePutPenReportRaw(context, request, cq));
    }
    // / <summary>
    // / 13. 发送-功放板音量查询
    // / </summary>
    virtual ::grpc::Status SendPowerAmplifierVolumeQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendPowerAmplifierVolumeQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendPowerAmplifierVolumeQueryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendPowerAmplifierVolumeQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendPowerAmplifierVolumeQueryRaw(context, request, cq));
    }
    // / <summary>
    // / 14. 发送-功放板音效查询
    // / </summary>
    virtual ::grpc::Status SendPowerAmplifierModeQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendPowerAmplifierModeQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendPowerAmplifierModeQueryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendPowerAmplifierModeQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendPowerAmplifierModeQueryRaw(context, request, cq));
    }
    // / <summary>
    // / 15. 配置中控串口
    // / </summary>
    // / <param name="channel">串口通道</param>
    // / <param name="datab">数据位</param>
    // / <param name="dpaity">校验位</param>
    // / <param name="stopb1">停止位1</param>
    // / <param name="stopb2">停止位2</param>
    // / <param name="baudr">波特率</param>
    virtual ::grpc::Status SendConfigSerialPort(::grpc::ClientContext* context, const ::CentralControlRequest::Request4& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendConfigSerialPort(::grpc::ClientContext* context, const ::CentralControlRequest::Request4& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendConfigSerialPortRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendConfigSerialPort(::grpc::ClientContext* context, const ::CentralControlRequest::Request4& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendConfigSerialPortRaw(context, request, cq));
    }
    // / <summary>
    // / 16. 串口发送
    // / </summary>
    // / <param name="channel">串口通道</param>
    // / <param name="senddata">串口发送数据</param>
    virtual ::grpc::Status SerialSend(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSerialSend(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSerialSendRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSerialSend(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSerialSendRaw(context, request, cq));
    }
    // / <summary>
    // / 17. 串口接收完成回复
    // / </summary>
    // / <param name="channel">串口通道</param>
    // / <param name="isSuccessed">是否接收成功</param>
    virtual ::grpc::Status RespSerialReceive(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncRespSerialReceive(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncRespSerialReceiveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncRespSerialReceive(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncRespSerialReceiveRaw(context, request, cq));
    }
    // / <summary>
    // / 18. 回复IO触发
    // / </summary>
    // / <param name="channel">IO触发通道</param>
    // / <param name="level">高低电平 0x01-高电平 0x02-低电平</param>
    // / <param name="isSucessed">是否成功 0x01-成功 0x02-失败</param>
    virtual ::grpc::Status RespUPIO(::grpc::ClientContext* context, const ::CentralControlRequest::Request5& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncRespUPIO(::grpc::ClientContext* context, const ::CentralControlRequest::Request5& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncRespUPIORaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncRespUPIO(::grpc::ClientContext* context, const ::CentralControlRequest::Request5& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncRespUPIORaw(context, request, cq));
    }
    // / <summary>
    // / 19. 使能继电器
    // / </summary>
    // / <param name="channel">继电器通道</param>
    // / <param name="isEnable">继电器开关 0x01-开启 0x02-关闭</param>
    virtual ::grpc::Status CtrlRelay(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncCtrlRelay(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncCtrlRelayRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncCtrlRelay(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncCtrlRelayRaw(context, request, cq));
    }
    // / <summary>
    // / 20. 开启红外学习
    // / </summary>
    virtual ::grpc::Status StartInfraredLearn(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncStartInfraredLearn(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncStartInfraredLearnRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncStartInfraredLearn(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncStartInfraredLearnRaw(context, request, cq));
    }
    // / <summary>
    // / 21. 发送红外数据
    // / </summary>
    // / <param name="index">红外索引号</param>
    // / <param name="infrareddata">红外数据</param>
    virtual ::grpc::Status SendInfraredData(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendInfraredData(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendInfraredDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendInfraredData(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendInfraredDataRaw(context, request, cq));
    }
    // / <summary>
    // / 22. 回复红外接收数据
    // / </summary>
    // / <param name="index">红外索引号</param>
    // / <param name="isSucessed">是否成功 0x01-成功 0x02-失败</param>
    virtual ::grpc::Status RespInfraredData(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncRespInfraredData(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncRespInfraredDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncRespInfraredData(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncRespInfraredDataRaw(context, request, cq));
    }
    // / <summary>
    // / 23. 光照强度
    // / </summary>
    // / <param name="isSuccessed">是否接收成功</param>
    virtual ::grpc::Status RespLightIntensity(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncRespLightIntensity(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncRespLightIntensityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncRespLightIntensity(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncRespLightIntensityRaw(context, request, cq));
    }
    // / <summary>
    // / 24. 温湿度
    // / </summary>
    // / <param name="isSuccessed">是否接收成功</param>
    virtual ::grpc::Status RespHumitureData(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncRespHumitureData(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncRespHumitureDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncRespHumitureData(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncRespHumitureDataRaw(context, request, cq));
    }
    // / <summary>
    // / 25. 人体传感器
    // / </summary>
    // / <param name="isSuccessed">是否接收成功</param>
    virtual ::grpc::Status RespBodySensor(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncRespBodySensor(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncRespBodySensorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncRespBodySensor(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncRespBodySensorRaw(context, request, cq));
    }
    // / <summary>
    // / 26. 发送触摸HID数据
    // / </summary>
    virtual ::grpc::Status SendTouchHIDData(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendTouchHIDData(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendTouchHIDDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendTouchHIDData(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendTouchHIDDataRaw(context, request, cq));
    }
    // / <summary>
    // / 27. 发送-中控状态查询
    // / </summary>
    virtual ::grpc::Status SendStatusQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendStatusQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendStatusQueryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendStatusQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendStatusQueryRaw(context, request, cq));
    }
    // / <summary>
    // / 28. 发送-设置中控状态
    // / </summary>
    // / <param name="status"></param>
    virtual ::grpc::Status SendSetCtCtrlStatus(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendSetCtCtrlStatus(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendSetCtCtrlStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendSetCtCtrlStatus(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendSetCtCtrlStatusRaw(context, request, cq));
    }
    // / <summary>
    // / 29. 发送设置音源输出
    // / </summary>
    // / <param name="src"></param>
    virtual ::grpc::Status SendSetSoundSrc(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendSetSoundSrc(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendSetSoundSrcRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendSetSoundSrc(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendSetSoundSrcRaw(context, request, cq));
    }
    // / <summary>
    // / 30. 发送-输入设备音量调节
    // / </summary>
    // / <param name="devType"></param>
    // / <param name="value"></param>
    virtual ::grpc::Status SendSetDevInVolume(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendSetDevInVolume(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendSetDevInVolumeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendSetDevInVolume(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendSetDevInVolumeRaw(context, request, cq));
    }
    // / <summary>
    // / 31. 发送-打开中控串口通讯
    // / </summary>
    virtual ::grpc::Status SendOpenCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendOpenCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendOpenCentralControlCommRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendOpenCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendOpenCentralControlCommRaw(context, request, cq));
    }
    // / <summary>
    // / 32. 发送-关闭中控串口通讯
    // / </summary>
    virtual ::grpc::Status SendCloseCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendCloseCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendCloseCentralControlCommRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendCloseCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendCloseCentralControlCommRaw(context, request, cq));
    }
    // / <summary>
    // / 33. 发送-重启中控串口通讯
    // / </summary>
    virtual ::grpc::Status SendResumeCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendResumeCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendResumeCentralControlCommRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendResumeCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendResumeCentralControlCommRaw(context, request, cq));
    }
    // / <summary>
    // / 34. 发送-询问是否在连接中控
    // / </summary>
    virtual ::grpc::Status SendIsLinkingCentralControl(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendIsLinkingCentralControl(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendIsLinkingCentralControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendIsLinkingCentralControl(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendIsLinkingCentralControlRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // / <summary>
      // / 1. 发送数据-N640图片显示
      // / </summary>
      virtual void SendN640PicShow(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendN640PicShow(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 2. 发送数据-N640截图操作
      // / </summary>
      virtual void SendN640ScreenShot(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendN640ScreenShot(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 3. 信号源切换
      // / </summary>
      // / <param name="cmdInput">输入源</param>
      // / <param name="cmdOutput">输出源</param>
      virtual void SendSignalSwitch(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendSignalSwitch(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 4. 获取分辨率
      // / </summary>
      // / <param name="src">信号源选择 01-HDMI1 02-HDMI1 03-HDMI1 04-HDMI1 </param>
      virtual void SendResolution(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendResolution(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 5. HDMI口是否存在信号查询
      // / </summary>
      // / <param name="src">信号源选择 01-HDMI1 02-HDMI1 03-HDMI1 04-HDMI1 </param>
      virtual void SendCheckSignal(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendCheckSignal(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 6. 发送心跳包
      // / </summary>
      virtual void SendHeartBeatData(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendHeartBeatData(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 7. 发送屏幕（背光）亮灭控制
      // / </summary>
      // / <param name="isBright">是否亮屏 true-亮 false-灭</param>
      virtual void SendScreenBrightOut(::grpc::ClientContext* context, const ::CentralControlRequest::Request2* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendScreenBrightOut(::grpc::ClientContext* context, const ::CentralControlRequest::Request2* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 8. 发送WIFI启用、禁用控制
      // / </summary>
      // / <param name="isEnable">是否启用 0x01-启用 0x02-关闭</param>
      virtual void SendWIFICtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request2* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendWIFICtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request2* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 9. 回复-通知应用关闭电脑控制
      // / </summary>
      // / <param name="shutDownType">关机类型：假关机、断电关机</param>
      // / <param name="isSuccessed">是否成功 0x01-成功 0x02-失败</param>
      virtual void RespNoticeAppShutdown(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RespNoticeAppShutdown(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 10. 发送功放板音量调节
      // / </summary>
      // / <param name="volumeValue">音量值（0-100）</param>
      virtual void SendPowerAmplifierVolumeCtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendPowerAmplifierVolumeCtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 11. 发送功放板模式调节
      // / </summary>
      // / <param name="mode">音效模式</param>
      virtual void SendPowerAmplifierModeCtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendPowerAmplifierModeCtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 12. 回复提笔和放笔的上报
      // / </summary>
      // / <param name="cmdParam"></param>
      // / <param name="isSuccessed"></param>
      virtual void RespTakePutPenReport(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RespTakePutPenReport(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 13. 发送-功放板音量查询
      // / </summary>
      virtual void SendPowerAmplifierVolumeQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendPowerAmplifierVolumeQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 14. 发送-功放板音效查询
      // / </summary>
      virtual void SendPowerAmplifierModeQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendPowerAmplifierModeQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 15. 配置中控串口
      // / </summary>
      // / <param name="channel">串口通道</param>
      // / <param name="datab">数据位</param>
      // / <param name="dpaity">校验位</param>
      // / <param name="stopb1">停止位1</param>
      // / <param name="stopb2">停止位2</param>
      // / <param name="baudr">波特率</param>
      virtual void SendConfigSerialPort(::grpc::ClientContext* context, const ::CentralControlRequest::Request4* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendConfigSerialPort(::grpc::ClientContext* context, const ::CentralControlRequest::Request4* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 16. 串口发送
      // / </summary>
      // / <param name="channel">串口通道</param>
      // / <param name="senddata">串口发送数据</param>
      virtual void SerialSend(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SerialSend(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 17. 串口接收完成回复
      // / </summary>
      // / <param name="channel">串口通道</param>
      // / <param name="isSuccessed">是否接收成功</param>
      virtual void RespSerialReceive(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RespSerialReceive(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 18. 回复IO触发
      // / </summary>
      // / <param name="channel">IO触发通道</param>
      // / <param name="level">高低电平 0x01-高电平 0x02-低电平</param>
      // / <param name="isSucessed">是否成功 0x01-成功 0x02-失败</param>
      virtual void RespUPIO(::grpc::ClientContext* context, const ::CentralControlRequest::Request5* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RespUPIO(::grpc::ClientContext* context, const ::CentralControlRequest::Request5* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 19. 使能继电器
      // / </summary>
      // / <param name="channel">继电器通道</param>
      // / <param name="isEnable">继电器开关 0x01-开启 0x02-关闭</param>
      virtual void CtrlRelay(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CtrlRelay(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 20. 开启红外学习
      // / </summary>
      virtual void StartInfraredLearn(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StartInfraredLearn(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 21. 发送红外数据
      // / </summary>
      // / <param name="index">红外索引号</param>
      // / <param name="infrareddata">红外数据</param>
      virtual void SendInfraredData(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendInfraredData(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 22. 回复红外接收数据
      // / </summary>
      // / <param name="index">红外索引号</param>
      // / <param name="isSucessed">是否成功 0x01-成功 0x02-失败</param>
      virtual void RespInfraredData(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RespInfraredData(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 23. 光照强度
      // / </summary>
      // / <param name="isSuccessed">是否接收成功</param>
      virtual void RespLightIntensity(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RespLightIntensity(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 24. 温湿度
      // / </summary>
      // / <param name="isSuccessed">是否接收成功</param>
      virtual void RespHumitureData(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RespHumitureData(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 25. 人体传感器
      // / </summary>
      // / <param name="isSuccessed">是否接收成功</param>
      virtual void RespBodySensor(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RespBodySensor(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 26. 发送触摸HID数据
      // / </summary>
      virtual void SendTouchHIDData(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendTouchHIDData(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 27. 发送-中控状态查询
      // / </summary>
      virtual void SendStatusQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendStatusQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 28. 发送-设置中控状态
      // / </summary>
      // / <param name="status"></param>
      virtual void SendSetCtCtrlStatus(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendSetCtCtrlStatus(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 29. 发送设置音源输出
      // / </summary>
      // / <param name="src"></param>
      virtual void SendSetSoundSrc(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendSetSoundSrc(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 30. 发送-输入设备音量调节
      // / </summary>
      // / <param name="devType"></param>
      // / <param name="value"></param>
      virtual void SendSetDevInVolume(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendSetDevInVolume(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 31. 发送-打开中控串口通讯
      // / </summary>
      virtual void SendOpenCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendOpenCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 32. 发送-关闭中控串口通讯
      // / </summary>
      virtual void SendCloseCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendCloseCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 33. 发送-重启中控串口通讯
      // / </summary>
      virtual void SendResumeCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendResumeCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / <summary>
      // / 34. 发送-询问是否在连接中控
      // / </summary>
      virtual void SendIsLinkingCentralControl(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendIsLinkingCentralControl(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendN640PicShowRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendN640PicShowRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendN640ScreenShotRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendN640ScreenShotRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendSignalSwitchRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendSignalSwitchRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendResolutionRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendResolutionRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendCheckSignalRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendCheckSignalRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendHeartBeatDataRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendHeartBeatDataRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendScreenBrightOutRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request2& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendScreenBrightOutRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request2& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendWIFICtrlRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request2& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendWIFICtrlRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request2& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncRespNoticeAppShutdownRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncRespNoticeAppShutdownRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendPowerAmplifierVolumeCtrlRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendPowerAmplifierVolumeCtrlRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendPowerAmplifierModeCtrlRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendPowerAmplifierModeCtrlRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncRespTakePutPenReportRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncRespTakePutPenReportRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendPowerAmplifierVolumeQueryRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendPowerAmplifierVolumeQueryRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendPowerAmplifierModeQueryRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendPowerAmplifierModeQueryRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendConfigSerialPortRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request4& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendConfigSerialPortRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request4& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSerialSendRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSerialSendRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncRespSerialReceiveRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncRespSerialReceiveRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncRespUPIORaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request5& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncRespUPIORaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request5& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncCtrlRelayRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncCtrlRelayRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncStartInfraredLearnRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncStartInfraredLearnRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendInfraredDataRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendInfraredDataRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncRespInfraredDataRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncRespInfraredDataRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncRespLightIntensityRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncRespLightIntensityRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncRespHumitureDataRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncRespHumitureDataRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncRespBodySensorRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncRespBodySensorRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendTouchHIDDataRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendTouchHIDDataRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendStatusQueryRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendStatusQueryRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendSetCtCtrlStatusRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendSetCtCtrlStatusRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendSetSoundSrcRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendSetSoundSrcRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendSetDevInVolumeRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendSetDevInVolumeRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendOpenCentralControlCommRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendOpenCentralControlCommRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendCloseCentralControlCommRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendCloseCentralControlCommRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendResumeCentralControlCommRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendResumeCentralControlCommRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendIsLinkingCentralControlRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendIsLinkingCentralControlRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status SendN640PicShow(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendN640PicShow(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendN640PicShowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendN640PicShow(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendN640PicShowRaw(context, request, cq));
    }
    ::grpc::Status SendN640ScreenShot(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendN640ScreenShot(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendN640ScreenShotRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendN640ScreenShot(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendN640ScreenShotRaw(context, request, cq));
    }
    ::grpc::Status SendSignalSwitch(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendSignalSwitch(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendSignalSwitchRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendSignalSwitch(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendSignalSwitchRaw(context, request, cq));
    }
    ::grpc::Status SendResolution(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendResolution(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendResolutionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendResolution(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendResolutionRaw(context, request, cq));
    }
    ::grpc::Status SendCheckSignal(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendCheckSignal(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendCheckSignalRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendCheckSignal(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendCheckSignalRaw(context, request, cq));
    }
    ::grpc::Status SendHeartBeatData(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendHeartBeatData(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendHeartBeatDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendHeartBeatData(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendHeartBeatDataRaw(context, request, cq));
    }
    ::grpc::Status SendScreenBrightOut(::grpc::ClientContext* context, const ::CentralControlRequest::Request2& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendScreenBrightOut(::grpc::ClientContext* context, const ::CentralControlRequest::Request2& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendScreenBrightOutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendScreenBrightOut(::grpc::ClientContext* context, const ::CentralControlRequest::Request2& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendScreenBrightOutRaw(context, request, cq));
    }
    ::grpc::Status SendWIFICtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request2& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendWIFICtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request2& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendWIFICtrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendWIFICtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request2& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendWIFICtrlRaw(context, request, cq));
    }
    ::grpc::Status RespNoticeAppShutdown(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncRespNoticeAppShutdown(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncRespNoticeAppShutdownRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncRespNoticeAppShutdown(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncRespNoticeAppShutdownRaw(context, request, cq));
    }
    ::grpc::Status SendPowerAmplifierVolumeCtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendPowerAmplifierVolumeCtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendPowerAmplifierVolumeCtrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendPowerAmplifierVolumeCtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendPowerAmplifierVolumeCtrlRaw(context, request, cq));
    }
    ::grpc::Status SendPowerAmplifierModeCtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendPowerAmplifierModeCtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendPowerAmplifierModeCtrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendPowerAmplifierModeCtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendPowerAmplifierModeCtrlRaw(context, request, cq));
    }
    ::grpc::Status RespTakePutPenReport(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncRespTakePutPenReport(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncRespTakePutPenReportRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncRespTakePutPenReport(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncRespTakePutPenReportRaw(context, request, cq));
    }
    ::grpc::Status SendPowerAmplifierVolumeQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendPowerAmplifierVolumeQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendPowerAmplifierVolumeQueryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendPowerAmplifierVolumeQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendPowerAmplifierVolumeQueryRaw(context, request, cq));
    }
    ::grpc::Status SendPowerAmplifierModeQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendPowerAmplifierModeQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendPowerAmplifierModeQueryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendPowerAmplifierModeQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendPowerAmplifierModeQueryRaw(context, request, cq));
    }
    ::grpc::Status SendConfigSerialPort(::grpc::ClientContext* context, const ::CentralControlRequest::Request4& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendConfigSerialPort(::grpc::ClientContext* context, const ::CentralControlRequest::Request4& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendConfigSerialPortRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendConfigSerialPort(::grpc::ClientContext* context, const ::CentralControlRequest::Request4& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendConfigSerialPortRaw(context, request, cq));
    }
    ::grpc::Status SerialSend(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSerialSend(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSerialSendRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSerialSend(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSerialSendRaw(context, request, cq));
    }
    ::grpc::Status RespSerialReceive(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncRespSerialReceive(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncRespSerialReceiveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncRespSerialReceive(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncRespSerialReceiveRaw(context, request, cq));
    }
    ::grpc::Status RespUPIO(::grpc::ClientContext* context, const ::CentralControlRequest::Request5& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncRespUPIO(::grpc::ClientContext* context, const ::CentralControlRequest::Request5& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncRespUPIORaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncRespUPIO(::grpc::ClientContext* context, const ::CentralControlRequest::Request5& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncRespUPIORaw(context, request, cq));
    }
    ::grpc::Status CtrlRelay(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncCtrlRelay(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncCtrlRelayRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncCtrlRelay(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncCtrlRelayRaw(context, request, cq));
    }
    ::grpc::Status StartInfraredLearn(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncStartInfraredLearn(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncStartInfraredLearnRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncStartInfraredLearn(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncStartInfraredLearnRaw(context, request, cq));
    }
    ::grpc::Status SendInfraredData(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendInfraredData(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendInfraredDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendInfraredData(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendInfraredDataRaw(context, request, cq));
    }
    ::grpc::Status RespInfraredData(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncRespInfraredData(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncRespInfraredDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncRespInfraredData(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncRespInfraredDataRaw(context, request, cq));
    }
    ::grpc::Status RespLightIntensity(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncRespLightIntensity(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncRespLightIntensityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncRespLightIntensity(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncRespLightIntensityRaw(context, request, cq));
    }
    ::grpc::Status RespHumitureData(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncRespHumitureData(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncRespHumitureDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncRespHumitureData(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncRespHumitureDataRaw(context, request, cq));
    }
    ::grpc::Status RespBodySensor(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncRespBodySensor(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncRespBodySensorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncRespBodySensor(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncRespBodySensorRaw(context, request, cq));
    }
    ::grpc::Status SendTouchHIDData(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendTouchHIDData(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendTouchHIDDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendTouchHIDData(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendTouchHIDDataRaw(context, request, cq));
    }
    ::grpc::Status SendStatusQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendStatusQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendStatusQueryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendStatusQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendStatusQueryRaw(context, request, cq));
    }
    ::grpc::Status SendSetCtCtrlStatus(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendSetCtCtrlStatus(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendSetCtCtrlStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendSetCtCtrlStatus(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendSetCtCtrlStatusRaw(context, request, cq));
    }
    ::grpc::Status SendSetSoundSrc(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendSetSoundSrc(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendSetSoundSrcRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendSetSoundSrc(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendSetSoundSrcRaw(context, request, cq));
    }
    ::grpc::Status SendSetDevInVolume(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendSetDevInVolume(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendSetDevInVolumeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendSetDevInVolume(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendSetDevInVolumeRaw(context, request, cq));
    }
    ::grpc::Status SendOpenCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendOpenCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendOpenCentralControlCommRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendOpenCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendOpenCentralControlCommRaw(context, request, cq));
    }
    ::grpc::Status SendCloseCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendCloseCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendCloseCentralControlCommRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendCloseCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendCloseCentralControlCommRaw(context, request, cq));
    }
    ::grpc::Status SendResumeCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendResumeCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendResumeCentralControlCommRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendResumeCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendResumeCentralControlCommRaw(context, request, cq));
    }
    ::grpc::Status SendIsLinkingCentralControl(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendIsLinkingCentralControl(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendIsLinkingCentralControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendIsLinkingCentralControl(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendIsLinkingCentralControlRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void SendN640PicShow(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendN640PicShow(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendN640ScreenShot(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendN640ScreenShot(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendSignalSwitch(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendSignalSwitch(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendResolution(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendResolution(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendCheckSignal(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendCheckSignal(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendHeartBeatData(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendHeartBeatData(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendScreenBrightOut(::grpc::ClientContext* context, const ::CentralControlRequest::Request2* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendScreenBrightOut(::grpc::ClientContext* context, const ::CentralControlRequest::Request2* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendWIFICtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request2* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendWIFICtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request2* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RespNoticeAppShutdown(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void RespNoticeAppShutdown(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendPowerAmplifierVolumeCtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendPowerAmplifierVolumeCtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendPowerAmplifierModeCtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendPowerAmplifierModeCtrl(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RespTakePutPenReport(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void RespTakePutPenReport(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendPowerAmplifierVolumeQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendPowerAmplifierVolumeQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendPowerAmplifierModeQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendPowerAmplifierModeQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendConfigSerialPort(::grpc::ClientContext* context, const ::CentralControlRequest::Request4* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendConfigSerialPort(::grpc::ClientContext* context, const ::CentralControlRequest::Request4* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SerialSend(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SerialSend(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RespSerialReceive(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void RespSerialReceive(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RespUPIO(::grpc::ClientContext* context, const ::CentralControlRequest::Request5* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void RespUPIO(::grpc::ClientContext* context, const ::CentralControlRequest::Request5* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CtrlRelay(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void CtrlRelay(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StartInfraredLearn(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void StartInfraredLearn(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendInfraredData(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendInfraredData(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RespInfraredData(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void RespInfraredData(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RespLightIntensity(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void RespLightIntensity(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RespHumitureData(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void RespHumitureData(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RespBodySensor(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void RespBodySensor(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendTouchHIDData(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendTouchHIDData(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendStatusQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendStatusQuery(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendSetCtCtrlStatus(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendSetCtCtrlStatus(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendSetSoundSrc(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendSetSoundSrc(::grpc::ClientContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendSetDevInVolume(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendSetDevInVolume(::grpc::ClientContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendOpenCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendOpenCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendCloseCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendCloseCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendResumeCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendResumeCentralControlComm(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendIsLinkingCentralControl(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendIsLinkingCentralControl(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendN640PicShowRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendN640PicShowRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendN640ScreenShotRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendN640ScreenShotRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendSignalSwitchRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendSignalSwitchRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendResolutionRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendResolutionRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendCheckSignalRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendCheckSignalRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendHeartBeatDataRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendHeartBeatDataRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendScreenBrightOutRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request2& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendScreenBrightOutRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request2& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendWIFICtrlRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request2& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendWIFICtrlRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request2& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncRespNoticeAppShutdownRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncRespNoticeAppShutdownRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendPowerAmplifierVolumeCtrlRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendPowerAmplifierVolumeCtrlRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendPowerAmplifierModeCtrlRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendPowerAmplifierModeCtrlRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncRespTakePutPenReportRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncRespTakePutPenReportRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendPowerAmplifierVolumeQueryRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendPowerAmplifierVolumeQueryRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendPowerAmplifierModeQueryRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendPowerAmplifierModeQueryRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendConfigSerialPortRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request4& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendConfigSerialPortRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request4& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSerialSendRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSerialSendRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncRespSerialReceiveRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncRespSerialReceiveRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncRespUPIORaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request5& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncRespUPIORaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request5& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncCtrlRelayRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncCtrlRelayRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncStartInfraredLearnRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncStartInfraredLearnRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendInfraredDataRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendInfraredDataRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncRespInfraredDataRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncRespInfraredDataRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncRespLightIntensityRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncRespLightIntensityRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncRespHumitureDataRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncRespHumitureDataRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncRespBodySensorRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncRespBodySensorRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendTouchHIDDataRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendTouchHIDDataRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendStatusQueryRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendStatusQueryRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendSetCtCtrlStatusRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendSetCtCtrlStatusRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendSetSoundSrcRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendSetSoundSrcRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request1& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendSetDevInVolumeRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendSetDevInVolumeRaw(::grpc::ClientContext* context, const ::CentralControlRequest::Request3& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendOpenCentralControlCommRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendOpenCentralControlCommRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendCloseCentralControlCommRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendCloseCentralControlCommRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendResumeCentralControlCommRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendResumeCentralControlCommRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendIsLinkingCentralControlRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendIsLinkingCentralControlRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_SendN640PicShow_;
    const ::grpc::internal::RpcMethod rpcmethod_SendN640ScreenShot_;
    const ::grpc::internal::RpcMethod rpcmethod_SendSignalSwitch_;
    const ::grpc::internal::RpcMethod rpcmethod_SendResolution_;
    const ::grpc::internal::RpcMethod rpcmethod_SendCheckSignal_;
    const ::grpc::internal::RpcMethod rpcmethod_SendHeartBeatData_;
    const ::grpc::internal::RpcMethod rpcmethod_SendScreenBrightOut_;
    const ::grpc::internal::RpcMethod rpcmethod_SendWIFICtrl_;
    const ::grpc::internal::RpcMethod rpcmethod_RespNoticeAppShutdown_;
    const ::grpc::internal::RpcMethod rpcmethod_SendPowerAmplifierVolumeCtrl_;
    const ::grpc::internal::RpcMethod rpcmethod_SendPowerAmplifierModeCtrl_;
    const ::grpc::internal::RpcMethod rpcmethod_RespTakePutPenReport_;
    const ::grpc::internal::RpcMethod rpcmethod_SendPowerAmplifierVolumeQuery_;
    const ::grpc::internal::RpcMethod rpcmethod_SendPowerAmplifierModeQuery_;
    const ::grpc::internal::RpcMethod rpcmethod_SendConfigSerialPort_;
    const ::grpc::internal::RpcMethod rpcmethod_SerialSend_;
    const ::grpc::internal::RpcMethod rpcmethod_RespSerialReceive_;
    const ::grpc::internal::RpcMethod rpcmethod_RespUPIO_;
    const ::grpc::internal::RpcMethod rpcmethod_CtrlRelay_;
    const ::grpc::internal::RpcMethod rpcmethod_StartInfraredLearn_;
    const ::grpc::internal::RpcMethod rpcmethod_SendInfraredData_;
    const ::grpc::internal::RpcMethod rpcmethod_RespInfraredData_;
    const ::grpc::internal::RpcMethod rpcmethod_RespLightIntensity_;
    const ::grpc::internal::RpcMethod rpcmethod_RespHumitureData_;
    const ::grpc::internal::RpcMethod rpcmethod_RespBodySensor_;
    const ::grpc::internal::RpcMethod rpcmethod_SendTouchHIDData_;
    const ::grpc::internal::RpcMethod rpcmethod_SendStatusQuery_;
    const ::grpc::internal::RpcMethod rpcmethod_SendSetCtCtrlStatus_;
    const ::grpc::internal::RpcMethod rpcmethod_SendSetSoundSrc_;
    const ::grpc::internal::RpcMethod rpcmethod_SendSetDevInVolume_;
    const ::grpc::internal::RpcMethod rpcmethod_SendOpenCentralControlComm_;
    const ::grpc::internal::RpcMethod rpcmethod_SendCloseCentralControlComm_;
    const ::grpc::internal::RpcMethod rpcmethod_SendResumeCentralControlComm_;
    const ::grpc::internal::RpcMethod rpcmethod_SendIsLinkingCentralControl_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / <summary>
    // / 1. 发送数据-N640图片显示
    // / </summary>
    virtual ::grpc::Status SendN640PicShow(::grpc::ServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 2. 发送数据-N640截图操作
    // / </summary>
    virtual ::grpc::Status SendN640ScreenShot(::grpc::ServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 3. 信号源切换
    // / </summary>
    // / <param name="cmdInput">输入源</param>
    // / <param name="cmdOutput">输出源</param>
    virtual ::grpc::Status SendSignalSwitch(::grpc::ServerContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 4. 获取分辨率
    // / </summary>
    // / <param name="src">信号源选择 01-HDMI1 02-HDMI1 03-HDMI1 04-HDMI1 </param>
    virtual ::grpc::Status SendResolution(::grpc::ServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 5. HDMI口是否存在信号查询
    // / </summary>
    // / <param name="src">信号源选择 01-HDMI1 02-HDMI1 03-HDMI1 04-HDMI1 </param>
    virtual ::grpc::Status SendCheckSignal(::grpc::ServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 6. 发送心跳包
    // / </summary>
    virtual ::grpc::Status SendHeartBeatData(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 7. 发送屏幕（背光）亮灭控制
    // / </summary>
    // / <param name="isBright">是否亮屏 true-亮 false-灭</param>
    virtual ::grpc::Status SendScreenBrightOut(::grpc::ServerContext* context, const ::CentralControlRequest::Request2* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 8. 发送WIFI启用、禁用控制
    // / </summary>
    // / <param name="isEnable">是否启用 0x01-启用 0x02-关闭</param>
    virtual ::grpc::Status SendWIFICtrl(::grpc::ServerContext* context, const ::CentralControlRequest::Request2* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 9. 回复-通知应用关闭电脑控制
    // / </summary>
    // / <param name="shutDownType">关机类型：假关机、断电关机</param>
    // / <param name="isSuccessed">是否成功 0x01-成功 0x02-失败</param>
    virtual ::grpc::Status RespNoticeAppShutdown(::grpc::ServerContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 10. 发送功放板音量调节
    // / </summary>
    // / <param name="volumeValue">音量值（0-100）</param>
    virtual ::grpc::Status SendPowerAmplifierVolumeCtrl(::grpc::ServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 11. 发送功放板模式调节
    // / </summary>
    // / <param name="mode">音效模式</param>
    virtual ::grpc::Status SendPowerAmplifierModeCtrl(::grpc::ServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 12. 回复提笔和放笔的上报
    // / </summary>
    // / <param name="cmdParam"></param>
    // / <param name="isSuccessed"></param>
    virtual ::grpc::Status RespTakePutPenReport(::grpc::ServerContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 13. 发送-功放板音量查询
    // / </summary>
    virtual ::grpc::Status SendPowerAmplifierVolumeQuery(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 14. 发送-功放板音效查询
    // / </summary>
    virtual ::grpc::Status SendPowerAmplifierModeQuery(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 15. 配置中控串口
    // / </summary>
    // / <param name="channel">串口通道</param>
    // / <param name="datab">数据位</param>
    // / <param name="dpaity">校验位</param>
    // / <param name="stopb1">停止位1</param>
    // / <param name="stopb2">停止位2</param>
    // / <param name="baudr">波特率</param>
    virtual ::grpc::Status SendConfigSerialPort(::grpc::ServerContext* context, const ::CentralControlRequest::Request4* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 16. 串口发送
    // / </summary>
    // / <param name="channel">串口通道</param>
    // / <param name="senddata">串口发送数据</param>
    virtual ::grpc::Status SerialSend(::grpc::ServerContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 17. 串口接收完成回复
    // / </summary>
    // / <param name="channel">串口通道</param>
    // / <param name="isSuccessed">是否接收成功</param>
    virtual ::grpc::Status RespSerialReceive(::grpc::ServerContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 18. 回复IO触发
    // / </summary>
    // / <param name="channel">IO触发通道</param>
    // / <param name="level">高低电平 0x01-高电平 0x02-低电平</param>
    // / <param name="isSucessed">是否成功 0x01-成功 0x02-失败</param>
    virtual ::grpc::Status RespUPIO(::grpc::ServerContext* context, const ::CentralControlRequest::Request5* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 19. 使能继电器
    // / </summary>
    // / <param name="channel">继电器通道</param>
    // / <param name="isEnable">继电器开关 0x01-开启 0x02-关闭</param>
    virtual ::grpc::Status CtrlRelay(::grpc::ServerContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 20. 开启红外学习
    // / </summary>
    virtual ::grpc::Status StartInfraredLearn(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 21. 发送红外数据
    // / </summary>
    // / <param name="index">红外索引号</param>
    // / <param name="infrareddata">红外数据</param>
    virtual ::grpc::Status SendInfraredData(::grpc::ServerContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 22. 回复红外接收数据
    // / </summary>
    // / <param name="index">红外索引号</param>
    // / <param name="isSucessed">是否成功 0x01-成功 0x02-失败</param>
    virtual ::grpc::Status RespInfraredData(::grpc::ServerContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 23. 光照强度
    // / </summary>
    // / <param name="isSuccessed">是否接收成功</param>
    virtual ::grpc::Status RespLightIntensity(::grpc::ServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 24. 温湿度
    // / </summary>
    // / <param name="isSuccessed">是否接收成功</param>
    virtual ::grpc::Status RespHumitureData(::grpc::ServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 25. 人体传感器
    // / </summary>
    // / <param name="isSuccessed">是否接收成功</param>
    virtual ::grpc::Status RespBodySensor(::grpc::ServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 26. 发送触摸HID数据
    // / </summary>
    virtual ::grpc::Status SendTouchHIDData(::grpc::ServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 27. 发送-中控状态查询
    // / </summary>
    virtual ::grpc::Status SendStatusQuery(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 28. 发送-设置中控状态
    // / </summary>
    // / <param name="status"></param>
    virtual ::grpc::Status SendSetCtCtrlStatus(::grpc::ServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 29. 发送设置音源输出
    // / </summary>
    // / <param name="src"></param>
    virtual ::grpc::Status SendSetSoundSrc(::grpc::ServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 30. 发送-输入设备音量调节
    // / </summary>
    // / <param name="devType"></param>
    // / <param name="value"></param>
    virtual ::grpc::Status SendSetDevInVolume(::grpc::ServerContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 31. 发送-打开中控串口通讯
    // / </summary>
    virtual ::grpc::Status SendOpenCentralControlComm(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 32. 发送-关闭中控串口通讯
    // / </summary>
    virtual ::grpc::Status SendCloseCentralControlComm(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 33. 发送-重启中控串口通讯
    // / </summary>
    virtual ::grpc::Status SendResumeCentralControlComm(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response);
    // / <summary>
    // / 34. 发送-询问是否在连接中控
    // / </summary>
    virtual ::grpc::Status SendIsLinkingCentralControl(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_SendN640PicShow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendN640PicShow() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_SendN640PicShow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendN640PicShow(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendN640PicShow(::grpc::ServerContext* context, ::CentralControlRequest::Request1* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendN640ScreenShot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendN640ScreenShot() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_SendN640ScreenShot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendN640ScreenShot(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendN640ScreenShot(::grpc::ServerContext* context, ::CentralControlRequest::Request1* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendSignalSwitch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendSignalSwitch() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_SendSignalSwitch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSignalSwitch(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendSignalSwitch(::grpc::ServerContext* context, ::CentralControlRequest::Request3* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendResolution : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendResolution() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_SendResolution() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendResolution(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendResolution(::grpc::ServerContext* context, ::CentralControlRequest::Request1* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendCheckSignal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendCheckSignal() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_SendCheckSignal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendCheckSignal(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendCheckSignal(::grpc::ServerContext* context, ::CentralControlRequest::Request1* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendHeartBeatData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendHeartBeatData() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_SendHeartBeatData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendHeartBeatData(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendHeartBeatData(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendScreenBrightOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendScreenBrightOut() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_SendScreenBrightOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendScreenBrightOut(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request2* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendScreenBrightOut(::grpc::ServerContext* context, ::CentralControlRequest::Request2* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendWIFICtrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendWIFICtrl() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_SendWIFICtrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendWIFICtrl(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request2* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendWIFICtrl(::grpc::ServerContext* context, ::CentralControlRequest::Request2* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RespNoticeAppShutdown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RespNoticeAppShutdown() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_RespNoticeAppShutdown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespNoticeAppShutdown(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespNoticeAppShutdown(::grpc::ServerContext* context, ::CentralControlRequest::Request3* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendPowerAmplifierVolumeCtrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendPowerAmplifierVolumeCtrl() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_SendPowerAmplifierVolumeCtrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendPowerAmplifierVolumeCtrl(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendPowerAmplifierVolumeCtrl(::grpc::ServerContext* context, ::CentralControlRequest::Request1* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendPowerAmplifierModeCtrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendPowerAmplifierModeCtrl() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_SendPowerAmplifierModeCtrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendPowerAmplifierModeCtrl(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendPowerAmplifierModeCtrl(::grpc::ServerContext* context, ::CentralControlRequest::Request1* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RespTakePutPenReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RespTakePutPenReport() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_RespTakePutPenReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespTakePutPenReport(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespTakePutPenReport(::grpc::ServerContext* context, ::CentralControlRequest::Request3* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendPowerAmplifierVolumeQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendPowerAmplifierVolumeQuery() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_SendPowerAmplifierVolumeQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendPowerAmplifierVolumeQuery(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendPowerAmplifierVolumeQuery(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendPowerAmplifierModeQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendPowerAmplifierModeQuery() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_SendPowerAmplifierModeQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendPowerAmplifierModeQuery(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendPowerAmplifierModeQuery(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendConfigSerialPort : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendConfigSerialPort() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_SendConfigSerialPort() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendConfigSerialPort(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request4* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendConfigSerialPort(::grpc::ServerContext* context, ::CentralControlRequest::Request4* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SerialSend : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SerialSend() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_SerialSend() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SerialSend(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSerialSend(::grpc::ServerContext* context, ::CentralControlRequest::Request3* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RespSerialReceive : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RespSerialReceive() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_RespSerialReceive() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespSerialReceive(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespSerialReceive(::grpc::ServerContext* context, ::CentralControlRequest::Request3* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RespUPIO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RespUPIO() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_RespUPIO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespUPIO(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request5* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespUPIO(::grpc::ServerContext* context, ::CentralControlRequest::Request5* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CtrlRelay : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CtrlRelay() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_CtrlRelay() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CtrlRelay(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCtrlRelay(::grpc::ServerContext* context, ::CentralControlRequest::Request3* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StartInfraredLearn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StartInfraredLearn() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_StartInfraredLearn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartInfraredLearn(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartInfraredLearn(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendInfraredData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendInfraredData() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_SendInfraredData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendInfraredData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendInfraredData(::grpc::ServerContext* context, ::CentralControlRequest::Request3* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RespInfraredData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RespInfraredData() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_RespInfraredData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespInfraredData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespInfraredData(::grpc::ServerContext* context, ::CentralControlRequest::Request3* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RespLightIntensity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RespLightIntensity() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_RespLightIntensity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespLightIntensity(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespLightIntensity(::grpc::ServerContext* context, ::CentralControlRequest::Request1* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RespHumitureData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RespHumitureData() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_RespHumitureData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespHumitureData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespHumitureData(::grpc::ServerContext* context, ::CentralControlRequest::Request1* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RespBodySensor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RespBodySensor() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_RespBodySensor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespBodySensor(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespBodySensor(::grpc::ServerContext* context, ::CentralControlRequest::Request1* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendTouchHIDData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendTouchHIDData() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_SendTouchHIDData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendTouchHIDData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendTouchHIDData(::grpc::ServerContext* context, ::CentralControlRequest::Request1* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendStatusQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendStatusQuery() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_SendStatusQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendStatusQuery(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendStatusQuery(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendSetCtCtrlStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendSetCtCtrlStatus() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_SendSetCtCtrlStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSetCtCtrlStatus(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendSetCtCtrlStatus(::grpc::ServerContext* context, ::CentralControlRequest::Request1* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendSetSoundSrc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendSetSoundSrc() {
      ::grpc::Service::MarkMethodAsync(28);
    }
    ~WithAsyncMethod_SendSetSoundSrc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSetSoundSrc(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendSetSoundSrc(::grpc::ServerContext* context, ::CentralControlRequest::Request1* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendSetDevInVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendSetDevInVolume() {
      ::grpc::Service::MarkMethodAsync(29);
    }
    ~WithAsyncMethod_SendSetDevInVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSetDevInVolume(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendSetDevInVolume(::grpc::ServerContext* context, ::CentralControlRequest::Request3* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendOpenCentralControlComm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendOpenCentralControlComm() {
      ::grpc::Service::MarkMethodAsync(30);
    }
    ~WithAsyncMethod_SendOpenCentralControlComm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendOpenCentralControlComm(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendOpenCentralControlComm(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendCloseCentralControlComm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendCloseCentralControlComm() {
      ::grpc::Service::MarkMethodAsync(31);
    }
    ~WithAsyncMethod_SendCloseCentralControlComm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendCloseCentralControlComm(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendCloseCentralControlComm(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendResumeCentralControlComm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendResumeCentralControlComm() {
      ::grpc::Service::MarkMethodAsync(32);
    }
    ~WithAsyncMethod_SendResumeCentralControlComm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendResumeCentralControlComm(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendResumeCentralControlComm(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendIsLinkingCentralControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendIsLinkingCentralControl() {
      ::grpc::Service::MarkMethodAsync(33);
    }
    ~WithAsyncMethod_SendIsLinkingCentralControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendIsLinkingCentralControl(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendIsLinkingCentralControl(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_SendN640PicShow<WithAsyncMethod_SendN640ScreenShot<WithAsyncMethod_SendSignalSwitch<WithAsyncMethod_SendResolution<WithAsyncMethod_SendCheckSignal<WithAsyncMethod_SendHeartBeatData<WithAsyncMethod_SendScreenBrightOut<WithAsyncMethod_SendWIFICtrl<WithAsyncMethod_RespNoticeAppShutdown<WithAsyncMethod_SendPowerAmplifierVolumeCtrl<WithAsyncMethod_SendPowerAmplifierModeCtrl<WithAsyncMethod_RespTakePutPenReport<WithAsyncMethod_SendPowerAmplifierVolumeQuery<WithAsyncMethod_SendPowerAmplifierModeQuery<WithAsyncMethod_SendConfigSerialPort<WithAsyncMethod_SerialSend<WithAsyncMethod_RespSerialReceive<WithAsyncMethod_RespUPIO<WithAsyncMethod_CtrlRelay<WithAsyncMethod_StartInfraredLearn<WithAsyncMethod_SendInfraredData<WithAsyncMethod_RespInfraredData<WithAsyncMethod_RespLightIntensity<WithAsyncMethod_RespHumitureData<WithAsyncMethod_RespBodySensor<WithAsyncMethod_SendTouchHIDData<WithAsyncMethod_SendStatusQuery<WithAsyncMethod_SendSetCtCtrlStatus<WithAsyncMethod_SendSetSoundSrc<WithAsyncMethod_SendSetDevInVolume<WithAsyncMethod_SendOpenCentralControlComm<WithAsyncMethod_SendCloseCentralControlComm<WithAsyncMethod_SendResumeCentralControlComm<WithAsyncMethod_SendIsLinkingCentralControl<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_SendN640PicShow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendN640PicShow() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response) { return this->SendN640PicShow(context, request, response); }));}
    void SetMessageAllocatorFor_SendN640PicShow(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request1, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendN640PicShow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendN640PicShow(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendN640PicShow(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendN640ScreenShot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendN640ScreenShot() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response) { return this->SendN640ScreenShot(context, request, response); }));}
    void SetMessageAllocatorFor_SendN640ScreenShot(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request1, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendN640ScreenShot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendN640ScreenShot(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendN640ScreenShot(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendSignalSwitch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendSignalSwitch() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request3, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response) { return this->SendSignalSwitch(context, request, response); }));}
    void SetMessageAllocatorFor_SendSignalSwitch(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request3, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request3, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendSignalSwitch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSignalSwitch(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendSignalSwitch(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendResolution : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendResolution() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response) { return this->SendResolution(context, request, response); }));}
    void SetMessageAllocatorFor_SendResolution(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request1, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendResolution() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendResolution(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendResolution(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendCheckSignal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendCheckSignal() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response) { return this->SendCheckSignal(context, request, response); }));}
    void SetMessageAllocatorFor_SendCheckSignal(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request1, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendCheckSignal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendCheckSignal(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendCheckSignal(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendHeartBeatData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendHeartBeatData() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) { return this->SendHeartBeatData(context, request, response); }));}
    void SetMessageAllocatorFor_SendHeartBeatData(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendHeartBeatData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendHeartBeatData(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendHeartBeatData(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendScreenBrightOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendScreenBrightOut() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request2, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request2* request, ::google::protobuf::Empty* response) { return this->SendScreenBrightOut(context, request, response); }));}
    void SetMessageAllocatorFor_SendScreenBrightOut(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request2, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request2, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendScreenBrightOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendScreenBrightOut(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request2* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendScreenBrightOut(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request2* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendWIFICtrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendWIFICtrl() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request2, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request2* request, ::google::protobuf::Empty* response) { return this->SendWIFICtrl(context, request, response); }));}
    void SetMessageAllocatorFor_SendWIFICtrl(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request2, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request2, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendWIFICtrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendWIFICtrl(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request2* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendWIFICtrl(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request2* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RespNoticeAppShutdown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RespNoticeAppShutdown() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request3, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response) { return this->RespNoticeAppShutdown(context, request, response); }));}
    void SetMessageAllocatorFor_RespNoticeAppShutdown(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request3, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request3, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RespNoticeAppShutdown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespNoticeAppShutdown(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespNoticeAppShutdown(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendPowerAmplifierVolumeCtrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendPowerAmplifierVolumeCtrl() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response) { return this->SendPowerAmplifierVolumeCtrl(context, request, response); }));}
    void SetMessageAllocatorFor_SendPowerAmplifierVolumeCtrl(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request1, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendPowerAmplifierVolumeCtrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendPowerAmplifierVolumeCtrl(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendPowerAmplifierVolumeCtrl(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendPowerAmplifierModeCtrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendPowerAmplifierModeCtrl() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response) { return this->SendPowerAmplifierModeCtrl(context, request, response); }));}
    void SetMessageAllocatorFor_SendPowerAmplifierModeCtrl(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request1, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendPowerAmplifierModeCtrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendPowerAmplifierModeCtrl(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendPowerAmplifierModeCtrl(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RespTakePutPenReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RespTakePutPenReport() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request3, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response) { return this->RespTakePutPenReport(context, request, response); }));}
    void SetMessageAllocatorFor_RespTakePutPenReport(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request3, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request3, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RespTakePutPenReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespTakePutPenReport(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespTakePutPenReport(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendPowerAmplifierVolumeQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendPowerAmplifierVolumeQuery() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) { return this->SendPowerAmplifierVolumeQuery(context, request, response); }));}
    void SetMessageAllocatorFor_SendPowerAmplifierVolumeQuery(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendPowerAmplifierVolumeQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendPowerAmplifierVolumeQuery(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendPowerAmplifierVolumeQuery(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendPowerAmplifierModeQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendPowerAmplifierModeQuery() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) { return this->SendPowerAmplifierModeQuery(context, request, response); }));}
    void SetMessageAllocatorFor_SendPowerAmplifierModeQuery(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendPowerAmplifierModeQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendPowerAmplifierModeQuery(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendPowerAmplifierModeQuery(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendConfigSerialPort : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendConfigSerialPort() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request4, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request4* request, ::google::protobuf::Empty* response) { return this->SendConfigSerialPort(context, request, response); }));}
    void SetMessageAllocatorFor_SendConfigSerialPort(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request4, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request4, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendConfigSerialPort() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendConfigSerialPort(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request4* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendConfigSerialPort(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request4* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SerialSend : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SerialSend() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request3, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response) { return this->SerialSend(context, request, response); }));}
    void SetMessageAllocatorFor_SerialSend(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request3, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request3, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SerialSend() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SerialSend(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SerialSend(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RespSerialReceive : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RespSerialReceive() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request3, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response) { return this->RespSerialReceive(context, request, response); }));}
    void SetMessageAllocatorFor_RespSerialReceive(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request3, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request3, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RespSerialReceive() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespSerialReceive(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespSerialReceive(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RespUPIO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RespUPIO() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request5, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request5* request, ::google::protobuf::Empty* response) { return this->RespUPIO(context, request, response); }));}
    void SetMessageAllocatorFor_RespUPIO(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request5, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request5, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RespUPIO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespUPIO(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request5* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespUPIO(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request5* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CtrlRelay : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CtrlRelay() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request3, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response) { return this->CtrlRelay(context, request, response); }));}
    void SetMessageAllocatorFor_CtrlRelay(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request3, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request3, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CtrlRelay() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CtrlRelay(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CtrlRelay(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StartInfraredLearn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StartInfraredLearn() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) { return this->StartInfraredLearn(context, request, response); }));}
    void SetMessageAllocatorFor_StartInfraredLearn(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StartInfraredLearn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartInfraredLearn(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StartInfraredLearn(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendInfraredData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendInfraredData() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request3, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response) { return this->SendInfraredData(context, request, response); }));}
    void SetMessageAllocatorFor_SendInfraredData(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request3, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request3, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendInfraredData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendInfraredData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendInfraredData(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RespInfraredData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RespInfraredData() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request3, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response) { return this->RespInfraredData(context, request, response); }));}
    void SetMessageAllocatorFor_RespInfraredData(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request3, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request3, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RespInfraredData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespInfraredData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespInfraredData(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RespLightIntensity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RespLightIntensity() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response) { return this->RespLightIntensity(context, request, response); }));}
    void SetMessageAllocatorFor_RespLightIntensity(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request1, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RespLightIntensity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespLightIntensity(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespLightIntensity(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RespHumitureData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RespHumitureData() {
      ::grpc::Service::MarkMethodCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response) { return this->RespHumitureData(context, request, response); }));}
    void SetMessageAllocatorFor_RespHumitureData(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request1, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(23);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RespHumitureData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespHumitureData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespHumitureData(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RespBodySensor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RespBodySensor() {
      ::grpc::Service::MarkMethodCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response) { return this->RespBodySensor(context, request, response); }));}
    void SetMessageAllocatorFor_RespBodySensor(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request1, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(24);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RespBodySensor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespBodySensor(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespBodySensor(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendTouchHIDData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendTouchHIDData() {
      ::grpc::Service::MarkMethodCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response) { return this->SendTouchHIDData(context, request, response); }));}
    void SetMessageAllocatorFor_SendTouchHIDData(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request1, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(25);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendTouchHIDData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendTouchHIDData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendTouchHIDData(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendStatusQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendStatusQuery() {
      ::grpc::Service::MarkMethodCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) { return this->SendStatusQuery(context, request, response); }));}
    void SetMessageAllocatorFor_SendStatusQuery(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(26);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendStatusQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendStatusQuery(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendStatusQuery(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendSetCtCtrlStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendSetCtCtrlStatus() {
      ::grpc::Service::MarkMethodCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response) { return this->SendSetCtCtrlStatus(context, request, response); }));}
    void SetMessageAllocatorFor_SendSetCtCtrlStatus(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request1, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(27);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendSetCtCtrlStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSetCtCtrlStatus(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendSetCtCtrlStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendSetSoundSrc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendSetSoundSrc() {
      ::grpc::Service::MarkMethodCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request1* request, ::google::protobuf::Empty* response) { return this->SendSetSoundSrc(context, request, response); }));}
    void SetMessageAllocatorFor_SendSetSoundSrc(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request1, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(28);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request1, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendSetSoundSrc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSetSoundSrc(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendSetSoundSrc(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendSetDevInVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendSetDevInVolume() {
      ::grpc::Service::MarkMethodCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request3, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::CentralControlRequest::Request3* request, ::google::protobuf::Empty* response) { return this->SendSetDevInVolume(context, request, response); }));}
    void SetMessageAllocatorFor_SendSetDevInVolume(
        ::grpc::MessageAllocator< ::CentralControlRequest::Request3, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(29);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::CentralControlRequest::Request3, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendSetDevInVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSetDevInVolume(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendSetDevInVolume(
      ::grpc::CallbackServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendOpenCentralControlComm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendOpenCentralControlComm() {
      ::grpc::Service::MarkMethodCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) { return this->SendOpenCentralControlComm(context, request, response); }));}
    void SetMessageAllocatorFor_SendOpenCentralControlComm(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(30);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendOpenCentralControlComm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendOpenCentralControlComm(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendOpenCentralControlComm(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendCloseCentralControlComm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendCloseCentralControlComm() {
      ::grpc::Service::MarkMethodCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) { return this->SendCloseCentralControlComm(context, request, response); }));}
    void SetMessageAllocatorFor_SendCloseCentralControlComm(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(31);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendCloseCentralControlComm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendCloseCentralControlComm(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendCloseCentralControlComm(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendResumeCentralControlComm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendResumeCentralControlComm() {
      ::grpc::Service::MarkMethodCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) { return this->SendResumeCentralControlComm(context, request, response); }));}
    void SetMessageAllocatorFor_SendResumeCentralControlComm(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(32);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendResumeCentralControlComm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendResumeCentralControlComm(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendResumeCentralControlComm(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendIsLinkingCentralControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendIsLinkingCentralControl() {
      ::grpc::Service::MarkMethodCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) { return this->SendIsLinkingCentralControl(context, request, response); }));}
    void SetMessageAllocatorFor_SendIsLinkingCentralControl(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(33);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendIsLinkingCentralControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendIsLinkingCentralControl(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendIsLinkingCentralControl(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_SendN640PicShow<WithCallbackMethod_SendN640ScreenShot<WithCallbackMethod_SendSignalSwitch<WithCallbackMethod_SendResolution<WithCallbackMethod_SendCheckSignal<WithCallbackMethod_SendHeartBeatData<WithCallbackMethod_SendScreenBrightOut<WithCallbackMethod_SendWIFICtrl<WithCallbackMethod_RespNoticeAppShutdown<WithCallbackMethod_SendPowerAmplifierVolumeCtrl<WithCallbackMethod_SendPowerAmplifierModeCtrl<WithCallbackMethod_RespTakePutPenReport<WithCallbackMethod_SendPowerAmplifierVolumeQuery<WithCallbackMethod_SendPowerAmplifierModeQuery<WithCallbackMethod_SendConfigSerialPort<WithCallbackMethod_SerialSend<WithCallbackMethod_RespSerialReceive<WithCallbackMethod_RespUPIO<WithCallbackMethod_CtrlRelay<WithCallbackMethod_StartInfraredLearn<WithCallbackMethod_SendInfraredData<WithCallbackMethod_RespInfraredData<WithCallbackMethod_RespLightIntensity<WithCallbackMethod_RespHumitureData<WithCallbackMethod_RespBodySensor<WithCallbackMethod_SendTouchHIDData<WithCallbackMethod_SendStatusQuery<WithCallbackMethod_SendSetCtCtrlStatus<WithCallbackMethod_SendSetSoundSrc<WithCallbackMethod_SendSetDevInVolume<WithCallbackMethod_SendOpenCentralControlComm<WithCallbackMethod_SendCloseCentralControlComm<WithCallbackMethod_SendResumeCentralControlComm<WithCallbackMethod_SendIsLinkingCentralControl<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_SendN640PicShow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendN640PicShow() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_SendN640PicShow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendN640PicShow(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendN640ScreenShot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendN640ScreenShot() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_SendN640ScreenShot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendN640ScreenShot(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendSignalSwitch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendSignalSwitch() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_SendSignalSwitch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSignalSwitch(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendResolution : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendResolution() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_SendResolution() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendResolution(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendCheckSignal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendCheckSignal() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_SendCheckSignal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendCheckSignal(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendHeartBeatData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendHeartBeatData() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_SendHeartBeatData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendHeartBeatData(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendScreenBrightOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendScreenBrightOut() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_SendScreenBrightOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendScreenBrightOut(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request2* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendWIFICtrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendWIFICtrl() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_SendWIFICtrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendWIFICtrl(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request2* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RespNoticeAppShutdown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RespNoticeAppShutdown() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_RespNoticeAppShutdown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespNoticeAppShutdown(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendPowerAmplifierVolumeCtrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendPowerAmplifierVolumeCtrl() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_SendPowerAmplifierVolumeCtrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendPowerAmplifierVolumeCtrl(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendPowerAmplifierModeCtrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendPowerAmplifierModeCtrl() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_SendPowerAmplifierModeCtrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendPowerAmplifierModeCtrl(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RespTakePutPenReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RespTakePutPenReport() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_RespTakePutPenReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespTakePutPenReport(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendPowerAmplifierVolumeQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendPowerAmplifierVolumeQuery() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_SendPowerAmplifierVolumeQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendPowerAmplifierVolumeQuery(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendPowerAmplifierModeQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendPowerAmplifierModeQuery() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_SendPowerAmplifierModeQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendPowerAmplifierModeQuery(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendConfigSerialPort : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendConfigSerialPort() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_SendConfigSerialPort() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendConfigSerialPort(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request4* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SerialSend : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SerialSend() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_SerialSend() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SerialSend(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RespSerialReceive : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RespSerialReceive() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_RespSerialReceive() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespSerialReceive(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RespUPIO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RespUPIO() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_RespUPIO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespUPIO(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request5* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CtrlRelay : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CtrlRelay() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_CtrlRelay() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CtrlRelay(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StartInfraredLearn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StartInfraredLearn() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_StartInfraredLearn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartInfraredLearn(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendInfraredData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendInfraredData() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_SendInfraredData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendInfraredData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RespInfraredData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RespInfraredData() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_RespInfraredData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespInfraredData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RespLightIntensity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RespLightIntensity() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_RespLightIntensity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespLightIntensity(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RespHumitureData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RespHumitureData() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_RespHumitureData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespHumitureData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RespBodySensor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RespBodySensor() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_RespBodySensor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespBodySensor(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendTouchHIDData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendTouchHIDData() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_SendTouchHIDData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendTouchHIDData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendStatusQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendStatusQuery() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_SendStatusQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendStatusQuery(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendSetCtCtrlStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendSetCtCtrlStatus() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_SendSetCtCtrlStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSetCtCtrlStatus(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendSetSoundSrc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendSetSoundSrc() {
      ::grpc::Service::MarkMethodGeneric(28);
    }
    ~WithGenericMethod_SendSetSoundSrc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSetSoundSrc(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendSetDevInVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendSetDevInVolume() {
      ::grpc::Service::MarkMethodGeneric(29);
    }
    ~WithGenericMethod_SendSetDevInVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSetDevInVolume(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendOpenCentralControlComm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendOpenCentralControlComm() {
      ::grpc::Service::MarkMethodGeneric(30);
    }
    ~WithGenericMethod_SendOpenCentralControlComm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendOpenCentralControlComm(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendCloseCentralControlComm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendCloseCentralControlComm() {
      ::grpc::Service::MarkMethodGeneric(31);
    }
    ~WithGenericMethod_SendCloseCentralControlComm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendCloseCentralControlComm(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendResumeCentralControlComm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendResumeCentralControlComm() {
      ::grpc::Service::MarkMethodGeneric(32);
    }
    ~WithGenericMethod_SendResumeCentralControlComm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendResumeCentralControlComm(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendIsLinkingCentralControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendIsLinkingCentralControl() {
      ::grpc::Service::MarkMethodGeneric(33);
    }
    ~WithGenericMethod_SendIsLinkingCentralControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendIsLinkingCentralControl(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendN640PicShow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendN640PicShow() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_SendN640PicShow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendN640PicShow(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendN640PicShow(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendN640ScreenShot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendN640ScreenShot() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_SendN640ScreenShot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendN640ScreenShot(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendN640ScreenShot(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendSignalSwitch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendSignalSwitch() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_SendSignalSwitch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSignalSwitch(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendSignalSwitch(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendResolution : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendResolution() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_SendResolution() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendResolution(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendResolution(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendCheckSignal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendCheckSignal() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_SendCheckSignal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendCheckSignal(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendCheckSignal(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendHeartBeatData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendHeartBeatData() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_SendHeartBeatData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendHeartBeatData(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendHeartBeatData(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendScreenBrightOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendScreenBrightOut() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_SendScreenBrightOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendScreenBrightOut(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request2* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendScreenBrightOut(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendWIFICtrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendWIFICtrl() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_SendWIFICtrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendWIFICtrl(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request2* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendWIFICtrl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RespNoticeAppShutdown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RespNoticeAppShutdown() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_RespNoticeAppShutdown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespNoticeAppShutdown(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespNoticeAppShutdown(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendPowerAmplifierVolumeCtrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendPowerAmplifierVolumeCtrl() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_SendPowerAmplifierVolumeCtrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendPowerAmplifierVolumeCtrl(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendPowerAmplifierVolumeCtrl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendPowerAmplifierModeCtrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendPowerAmplifierModeCtrl() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_SendPowerAmplifierModeCtrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendPowerAmplifierModeCtrl(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendPowerAmplifierModeCtrl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RespTakePutPenReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RespTakePutPenReport() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_RespTakePutPenReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespTakePutPenReport(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespTakePutPenReport(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendPowerAmplifierVolumeQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendPowerAmplifierVolumeQuery() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_SendPowerAmplifierVolumeQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendPowerAmplifierVolumeQuery(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendPowerAmplifierVolumeQuery(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendPowerAmplifierModeQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendPowerAmplifierModeQuery() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_SendPowerAmplifierModeQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendPowerAmplifierModeQuery(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendPowerAmplifierModeQuery(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendConfigSerialPort : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendConfigSerialPort() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_SendConfigSerialPort() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendConfigSerialPort(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request4* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendConfigSerialPort(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SerialSend : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SerialSend() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_SerialSend() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SerialSend(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSerialSend(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RespSerialReceive : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RespSerialReceive() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_RespSerialReceive() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespSerialReceive(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespSerialReceive(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RespUPIO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RespUPIO() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_RespUPIO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespUPIO(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request5* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespUPIO(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CtrlRelay : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CtrlRelay() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_CtrlRelay() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CtrlRelay(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCtrlRelay(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StartInfraredLearn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StartInfraredLearn() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_StartInfraredLearn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartInfraredLearn(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartInfraredLearn(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendInfraredData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendInfraredData() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_SendInfraredData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendInfraredData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendInfraredData(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RespInfraredData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RespInfraredData() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_RespInfraredData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespInfraredData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespInfraredData(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RespLightIntensity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RespLightIntensity() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_RespLightIntensity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespLightIntensity(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespLightIntensity(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RespHumitureData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RespHumitureData() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_RespHumitureData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespHumitureData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespHumitureData(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RespBodySensor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RespBodySensor() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_RespBodySensor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespBodySensor(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespBodySensor(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendTouchHIDData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendTouchHIDData() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_SendTouchHIDData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendTouchHIDData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendTouchHIDData(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendStatusQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendStatusQuery() {
      ::grpc::Service::MarkMethodRaw(26);
    }
    ~WithRawMethod_SendStatusQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendStatusQuery(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendStatusQuery(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendSetCtCtrlStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendSetCtCtrlStatus() {
      ::grpc::Service::MarkMethodRaw(27);
    }
    ~WithRawMethod_SendSetCtCtrlStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSetCtCtrlStatus(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendSetCtCtrlStatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendSetSoundSrc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendSetSoundSrc() {
      ::grpc::Service::MarkMethodRaw(28);
    }
    ~WithRawMethod_SendSetSoundSrc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSetSoundSrc(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendSetSoundSrc(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendSetDevInVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendSetDevInVolume() {
      ::grpc::Service::MarkMethodRaw(29);
    }
    ~WithRawMethod_SendSetDevInVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSetDevInVolume(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendSetDevInVolume(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendOpenCentralControlComm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendOpenCentralControlComm() {
      ::grpc::Service::MarkMethodRaw(30);
    }
    ~WithRawMethod_SendOpenCentralControlComm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendOpenCentralControlComm(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendOpenCentralControlComm(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendCloseCentralControlComm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendCloseCentralControlComm() {
      ::grpc::Service::MarkMethodRaw(31);
    }
    ~WithRawMethod_SendCloseCentralControlComm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendCloseCentralControlComm(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendCloseCentralControlComm(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendResumeCentralControlComm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendResumeCentralControlComm() {
      ::grpc::Service::MarkMethodRaw(32);
    }
    ~WithRawMethod_SendResumeCentralControlComm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendResumeCentralControlComm(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendResumeCentralControlComm(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendIsLinkingCentralControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendIsLinkingCentralControl() {
      ::grpc::Service::MarkMethodRaw(33);
    }
    ~WithRawMethod_SendIsLinkingCentralControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendIsLinkingCentralControl(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendIsLinkingCentralControl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendN640PicShow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendN640PicShow() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendN640PicShow(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendN640PicShow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendN640PicShow(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendN640PicShow(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendN640ScreenShot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendN640ScreenShot() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendN640ScreenShot(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendN640ScreenShot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendN640ScreenShot(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendN640ScreenShot(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendSignalSwitch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendSignalSwitch() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendSignalSwitch(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendSignalSwitch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSignalSwitch(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendSignalSwitch(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendResolution : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendResolution() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendResolution(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendResolution() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendResolution(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendResolution(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendCheckSignal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendCheckSignal() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendCheckSignal(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendCheckSignal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendCheckSignal(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendCheckSignal(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendHeartBeatData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendHeartBeatData() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendHeartBeatData(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendHeartBeatData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendHeartBeatData(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendHeartBeatData(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendScreenBrightOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendScreenBrightOut() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendScreenBrightOut(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendScreenBrightOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendScreenBrightOut(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request2* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendScreenBrightOut(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendWIFICtrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendWIFICtrl() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendWIFICtrl(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendWIFICtrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendWIFICtrl(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request2* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendWIFICtrl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RespNoticeAppShutdown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RespNoticeAppShutdown() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RespNoticeAppShutdown(context, request, response); }));
    }
    ~WithRawCallbackMethod_RespNoticeAppShutdown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespNoticeAppShutdown(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespNoticeAppShutdown(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendPowerAmplifierVolumeCtrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendPowerAmplifierVolumeCtrl() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendPowerAmplifierVolumeCtrl(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendPowerAmplifierVolumeCtrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendPowerAmplifierVolumeCtrl(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendPowerAmplifierVolumeCtrl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendPowerAmplifierModeCtrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendPowerAmplifierModeCtrl() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendPowerAmplifierModeCtrl(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendPowerAmplifierModeCtrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendPowerAmplifierModeCtrl(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendPowerAmplifierModeCtrl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RespTakePutPenReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RespTakePutPenReport() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RespTakePutPenReport(context, request, response); }));
    }
    ~WithRawCallbackMethod_RespTakePutPenReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespTakePutPenReport(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespTakePutPenReport(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendPowerAmplifierVolumeQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendPowerAmplifierVolumeQuery() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendPowerAmplifierVolumeQuery(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendPowerAmplifierVolumeQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendPowerAmplifierVolumeQuery(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendPowerAmplifierVolumeQuery(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendPowerAmplifierModeQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendPowerAmplifierModeQuery() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendPowerAmplifierModeQuery(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendPowerAmplifierModeQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendPowerAmplifierModeQuery(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendPowerAmplifierModeQuery(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendConfigSerialPort : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendConfigSerialPort() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendConfigSerialPort(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendConfigSerialPort() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendConfigSerialPort(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request4* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendConfigSerialPort(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SerialSend : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SerialSend() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SerialSend(context, request, response); }));
    }
    ~WithRawCallbackMethod_SerialSend() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SerialSend(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SerialSend(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RespSerialReceive : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RespSerialReceive() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RespSerialReceive(context, request, response); }));
    }
    ~WithRawCallbackMethod_RespSerialReceive() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespSerialReceive(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespSerialReceive(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RespUPIO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RespUPIO() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RespUPIO(context, request, response); }));
    }
    ~WithRawCallbackMethod_RespUPIO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespUPIO(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request5* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespUPIO(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CtrlRelay : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CtrlRelay() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CtrlRelay(context, request, response); }));
    }
    ~WithRawCallbackMethod_CtrlRelay() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CtrlRelay(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CtrlRelay(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StartInfraredLearn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StartInfraredLearn() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StartInfraredLearn(context, request, response); }));
    }
    ~WithRawCallbackMethod_StartInfraredLearn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartInfraredLearn(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StartInfraredLearn(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendInfraredData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendInfraredData() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendInfraredData(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendInfraredData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendInfraredData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendInfraredData(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RespInfraredData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RespInfraredData() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RespInfraredData(context, request, response); }));
    }
    ~WithRawCallbackMethod_RespInfraredData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespInfraredData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespInfraredData(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RespLightIntensity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RespLightIntensity() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RespLightIntensity(context, request, response); }));
    }
    ~WithRawCallbackMethod_RespLightIntensity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespLightIntensity(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespLightIntensity(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RespHumitureData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RespHumitureData() {
      ::grpc::Service::MarkMethodRawCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RespHumitureData(context, request, response); }));
    }
    ~WithRawCallbackMethod_RespHumitureData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespHumitureData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespHumitureData(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RespBodySensor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RespBodySensor() {
      ::grpc::Service::MarkMethodRawCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RespBodySensor(context, request, response); }));
    }
    ~WithRawCallbackMethod_RespBodySensor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespBodySensor(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespBodySensor(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendTouchHIDData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendTouchHIDData() {
      ::grpc::Service::MarkMethodRawCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendTouchHIDData(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendTouchHIDData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendTouchHIDData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendTouchHIDData(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendStatusQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendStatusQuery() {
      ::grpc::Service::MarkMethodRawCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendStatusQuery(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendStatusQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendStatusQuery(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendStatusQuery(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendSetCtCtrlStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendSetCtCtrlStatus() {
      ::grpc::Service::MarkMethodRawCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendSetCtCtrlStatus(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendSetCtCtrlStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSetCtCtrlStatus(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendSetCtCtrlStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendSetSoundSrc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendSetSoundSrc() {
      ::grpc::Service::MarkMethodRawCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendSetSoundSrc(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendSetSoundSrc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSetSoundSrc(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendSetSoundSrc(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendSetDevInVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendSetDevInVolume() {
      ::grpc::Service::MarkMethodRawCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendSetDevInVolume(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendSetDevInVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSetDevInVolume(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendSetDevInVolume(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendOpenCentralControlComm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendOpenCentralControlComm() {
      ::grpc::Service::MarkMethodRawCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendOpenCentralControlComm(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendOpenCentralControlComm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendOpenCentralControlComm(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendOpenCentralControlComm(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendCloseCentralControlComm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendCloseCentralControlComm() {
      ::grpc::Service::MarkMethodRawCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendCloseCentralControlComm(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendCloseCentralControlComm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendCloseCentralControlComm(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendCloseCentralControlComm(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendResumeCentralControlComm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendResumeCentralControlComm() {
      ::grpc::Service::MarkMethodRawCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendResumeCentralControlComm(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendResumeCentralControlComm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendResumeCentralControlComm(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendResumeCentralControlComm(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendIsLinkingCentralControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendIsLinkingCentralControl() {
      ::grpc::Service::MarkMethodRawCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendIsLinkingCentralControl(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendIsLinkingCentralControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendIsLinkingCentralControl(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendIsLinkingCentralControl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendN640PicShow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendN640PicShow() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request1, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendN640PicShow(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendN640PicShow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendN640PicShow(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendN640PicShow(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request1,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendN640ScreenShot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendN640ScreenShot() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request1, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendN640ScreenShot(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendN640ScreenShot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendN640ScreenShot(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendN640ScreenShot(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request1,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendSignalSwitch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendSignalSwitch() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request3, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request3, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendSignalSwitch(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendSignalSwitch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendSignalSwitch(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendSignalSwitch(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request3,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendResolution : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendResolution() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request1, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendResolution(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendResolution() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendResolution(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendResolution(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request1,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendCheckSignal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendCheckSignal() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request1, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendCheckSignal(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendCheckSignal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendCheckSignal(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendCheckSignal(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request1,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendHeartBeatData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendHeartBeatData() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendHeartBeatData(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendHeartBeatData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendHeartBeatData(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendHeartBeatData(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendScreenBrightOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendScreenBrightOut() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request2, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request2, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendScreenBrightOut(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendScreenBrightOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendScreenBrightOut(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request2* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendScreenBrightOut(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request2,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendWIFICtrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendWIFICtrl() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request2, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request2, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendWIFICtrl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendWIFICtrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendWIFICtrl(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request2* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendWIFICtrl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request2,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RespNoticeAppShutdown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RespNoticeAppShutdown() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request3, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request3, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedRespNoticeAppShutdown(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RespNoticeAppShutdown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RespNoticeAppShutdown(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRespNoticeAppShutdown(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request3,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendPowerAmplifierVolumeCtrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendPowerAmplifierVolumeCtrl() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request1, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendPowerAmplifierVolumeCtrl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendPowerAmplifierVolumeCtrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendPowerAmplifierVolumeCtrl(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendPowerAmplifierVolumeCtrl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request1,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendPowerAmplifierModeCtrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendPowerAmplifierModeCtrl() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request1, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendPowerAmplifierModeCtrl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendPowerAmplifierModeCtrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendPowerAmplifierModeCtrl(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendPowerAmplifierModeCtrl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request1,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RespTakePutPenReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RespTakePutPenReport() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request3, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request3, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedRespTakePutPenReport(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RespTakePutPenReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RespTakePutPenReport(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRespTakePutPenReport(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request3,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendPowerAmplifierVolumeQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendPowerAmplifierVolumeQuery() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendPowerAmplifierVolumeQuery(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendPowerAmplifierVolumeQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendPowerAmplifierVolumeQuery(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendPowerAmplifierVolumeQuery(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendPowerAmplifierModeQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendPowerAmplifierModeQuery() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendPowerAmplifierModeQuery(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendPowerAmplifierModeQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendPowerAmplifierModeQuery(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendPowerAmplifierModeQuery(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendConfigSerialPort : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendConfigSerialPort() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request4, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request4, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendConfigSerialPort(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendConfigSerialPort() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendConfigSerialPort(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request4* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendConfigSerialPort(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request4,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SerialSend : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SerialSend() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request3, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request3, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSerialSend(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SerialSend() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SerialSend(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSerialSend(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request3,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RespSerialReceive : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RespSerialReceive() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request3, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request3, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedRespSerialReceive(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RespSerialReceive() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RespSerialReceive(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRespSerialReceive(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request3,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RespUPIO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RespUPIO() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request5, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request5, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedRespUPIO(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RespUPIO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RespUPIO(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request5* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRespUPIO(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request5,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CtrlRelay : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CtrlRelay() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request3, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request3, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedCtrlRelay(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CtrlRelay() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CtrlRelay(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCtrlRelay(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request3,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StartInfraredLearn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StartInfraredLearn() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedStartInfraredLearn(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StartInfraredLearn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StartInfraredLearn(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStartInfraredLearn(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendInfraredData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendInfraredData() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request3, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request3, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendInfraredData(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendInfraredData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendInfraredData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendInfraredData(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request3,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RespInfraredData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RespInfraredData() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request3, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request3, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedRespInfraredData(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RespInfraredData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RespInfraredData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRespInfraredData(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request3,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RespLightIntensity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RespLightIntensity() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request1, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedRespLightIntensity(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RespLightIntensity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RespLightIntensity(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRespLightIntensity(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request1,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RespHumitureData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RespHumitureData() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request1, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedRespHumitureData(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RespHumitureData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RespHumitureData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRespHumitureData(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request1,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RespBodySensor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RespBodySensor() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request1, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedRespBodySensor(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RespBodySensor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RespBodySensor(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRespBodySensor(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request1,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendTouchHIDData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendTouchHIDData() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request1, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendTouchHIDData(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendTouchHIDData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendTouchHIDData(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendTouchHIDData(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request1,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendStatusQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendStatusQuery() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendStatusQuery(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendStatusQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendStatusQuery(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendStatusQuery(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendSetCtCtrlStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendSetCtCtrlStatus() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request1, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendSetCtCtrlStatus(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendSetCtCtrlStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendSetCtCtrlStatus(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendSetCtCtrlStatus(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request1,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendSetSoundSrc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendSetSoundSrc() {
      ::grpc::Service::MarkMethodStreamed(28,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request1, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request1, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendSetSoundSrc(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendSetSoundSrc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendSetSoundSrc(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request1* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendSetSoundSrc(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request1,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendSetDevInVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendSetDevInVolume() {
      ::grpc::Service::MarkMethodStreamed(29,
        new ::grpc::internal::StreamedUnaryHandler<
          ::CentralControlRequest::Request3, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::CentralControlRequest::Request3, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendSetDevInVolume(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendSetDevInVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendSetDevInVolume(::grpc::ServerContext* /*context*/, const ::CentralControlRequest::Request3* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendSetDevInVolume(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::CentralControlRequest::Request3,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendOpenCentralControlComm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendOpenCentralControlComm() {
      ::grpc::Service::MarkMethodStreamed(30,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendOpenCentralControlComm(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendOpenCentralControlComm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendOpenCentralControlComm(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendOpenCentralControlComm(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendCloseCentralControlComm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendCloseCentralControlComm() {
      ::grpc::Service::MarkMethodStreamed(31,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendCloseCentralControlComm(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendCloseCentralControlComm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendCloseCentralControlComm(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendCloseCentralControlComm(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendResumeCentralControlComm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendResumeCentralControlComm() {
      ::grpc::Service::MarkMethodStreamed(32,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendResumeCentralControlComm(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendResumeCentralControlComm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendResumeCentralControlComm(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendResumeCentralControlComm(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendIsLinkingCentralControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendIsLinkingCentralControl() {
      ::grpc::Service::MarkMethodStreamed(33,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendIsLinkingCentralControl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendIsLinkingCentralControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendIsLinkingCentralControl(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendIsLinkingCentralControl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_SendN640PicShow<WithStreamedUnaryMethod_SendN640ScreenShot<WithStreamedUnaryMethod_SendSignalSwitch<WithStreamedUnaryMethod_SendResolution<WithStreamedUnaryMethod_SendCheckSignal<WithStreamedUnaryMethod_SendHeartBeatData<WithStreamedUnaryMethod_SendScreenBrightOut<WithStreamedUnaryMethod_SendWIFICtrl<WithStreamedUnaryMethod_RespNoticeAppShutdown<WithStreamedUnaryMethod_SendPowerAmplifierVolumeCtrl<WithStreamedUnaryMethod_SendPowerAmplifierModeCtrl<WithStreamedUnaryMethod_RespTakePutPenReport<WithStreamedUnaryMethod_SendPowerAmplifierVolumeQuery<WithStreamedUnaryMethod_SendPowerAmplifierModeQuery<WithStreamedUnaryMethod_SendConfigSerialPort<WithStreamedUnaryMethod_SerialSend<WithStreamedUnaryMethod_RespSerialReceive<WithStreamedUnaryMethod_RespUPIO<WithStreamedUnaryMethod_CtrlRelay<WithStreamedUnaryMethod_StartInfraredLearn<WithStreamedUnaryMethod_SendInfraredData<WithStreamedUnaryMethod_RespInfraredData<WithStreamedUnaryMethod_RespLightIntensity<WithStreamedUnaryMethod_RespHumitureData<WithStreamedUnaryMethod_RespBodySensor<WithStreamedUnaryMethod_SendTouchHIDData<WithStreamedUnaryMethod_SendStatusQuery<WithStreamedUnaryMethod_SendSetCtCtrlStatus<WithStreamedUnaryMethod_SendSetSoundSrc<WithStreamedUnaryMethod_SendSetDevInVolume<WithStreamedUnaryMethod_SendOpenCentralControlComm<WithStreamedUnaryMethod_SendCloseCentralControlComm<WithStreamedUnaryMethod_SendResumeCentralControlComm<WithStreamedUnaryMethod_SendIsLinkingCentralControl<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_SendN640PicShow<WithStreamedUnaryMethod_SendN640ScreenShot<WithStreamedUnaryMethod_SendSignalSwitch<WithStreamedUnaryMethod_SendResolution<WithStreamedUnaryMethod_SendCheckSignal<WithStreamedUnaryMethod_SendHeartBeatData<WithStreamedUnaryMethod_SendScreenBrightOut<WithStreamedUnaryMethod_SendWIFICtrl<WithStreamedUnaryMethod_RespNoticeAppShutdown<WithStreamedUnaryMethod_SendPowerAmplifierVolumeCtrl<WithStreamedUnaryMethod_SendPowerAmplifierModeCtrl<WithStreamedUnaryMethod_RespTakePutPenReport<WithStreamedUnaryMethod_SendPowerAmplifierVolumeQuery<WithStreamedUnaryMethod_SendPowerAmplifierModeQuery<WithStreamedUnaryMethod_SendConfigSerialPort<WithStreamedUnaryMethod_SerialSend<WithStreamedUnaryMethod_RespSerialReceive<WithStreamedUnaryMethod_RespUPIO<WithStreamedUnaryMethod_CtrlRelay<WithStreamedUnaryMethod_StartInfraredLearn<WithStreamedUnaryMethod_SendInfraredData<WithStreamedUnaryMethod_RespInfraredData<WithStreamedUnaryMethod_RespLightIntensity<WithStreamedUnaryMethod_RespHumitureData<WithStreamedUnaryMethod_RespBodySensor<WithStreamedUnaryMethod_SendTouchHIDData<WithStreamedUnaryMethod_SendStatusQuery<WithStreamedUnaryMethod_SendSetCtCtrlStatus<WithStreamedUnaryMethod_SendSetSoundSrc<WithStreamedUnaryMethod_SendSetDevInVolume<WithStreamedUnaryMethod_SendOpenCentralControlComm<WithStreamedUnaryMethod_SendCloseCentralControlComm<WithStreamedUnaryMethod_SendResumeCentralControlComm<WithStreamedUnaryMethod_SendIsLinkingCentralControl<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace CentralControlRequest


#endif  // GRPC_CentralControlRequest_2eproto__INCLUDED
